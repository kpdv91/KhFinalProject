<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace=연결되는 인터페이스 -->    
<mapper namespace="com.kh.cat.common.dao.CommonInter">
	<!-- 글쓰기(등록된 글의 idx 컬럼을 반환해야한다.(몇가지 옵션이 필요하다.)) -->
	<!-- 
		parameterType 지정 (파라메터로 사용될 dto(bean))
		useGenertedKeys = "true" (insert 후 키 생성 여부)
		keyProperty = "idx" (키가 될 필드(dto변수))
		keyColumn = "idx" (키가 저장될 DB 컬럼)
	-->
	<select id="receivelist" resultType="dm">
		SELECT * FROM dm WHERE dm_id=#{param1}
	</select>
	<select id="sendlist" resultType="dm">
		SELECT * FROM dm WHERE id=#{param1}
	</select>
	<select id="receivedetail" resultType="dm">
		SELECT * FROM dm WHERE dm_idx=#{param1}
	</select>
	<select id="senddetail" resultType="dm">
		SELECT * FROM dm WHERE dm_idx=#{param1}
	</select>
	<select id="memberpoint" resultType="String">
		SELECT pointCnt FROM member WHERE id=#{param1}
	</select>
	<select id="pointlist" resultType="pointList">
		SELECT * FROM pointList WHERE id=#{param1}
	</select>
	<select id="couponlist" resultType="couponBox">
		SELECT * FROM couponbox WHERE id=#{param1}
	</select>
	<select id="messagesendidcheck" resultType="String">
		SELECT id FROM member WHERE id=#{param1}
	</select>
	<insert id="sendmsg">
		INSERT INTO dm VALUES(seq_dm.NEXTVAL,#{param1},#{param2},#{param3},SYSDATE)
	</insert>
	<select id="reviewtimelinecnt" resultType="Integer">
		SELECT COUNT(*) FROM review WHERE id=#{param1}
	</select>
	<select id="liketimelinecnt" resultType="Integer">
		SELECT COUNT(*) FROM revLike WHERE id=#{param1}
	</select>
	<select id="storeliketimelinecnt" resultType="Integer">
		SELECT COUNT(*) FROM storeLike WHERE id=#{param1}
	</select>
	<select id="followtimelinecnt" resultType="Integer">
		SELECT COUNT(*) FROM follow WHERE id=#{param1}
	</select>
	<select id="timelinereviewlist" resultType="review">
		SELECT * FROM review WHERE id=#{param1} ORDER BY review_date DESC
	</select>
	<insert id="followinsert">
		INSERT INTO follow VALUES(seq_follow.NEXTVAL,#{param1},#{param2})
	</insert>
	<select id="followcheck" resultType="String">
		SELECT id FROM follow WHERE id=#{param1} AND follow_id=#{param2}
	</select>
	<delete id="followdelete">
		DELETE FROM follow WHERE id=#{param1} AND follow_id=#{param2}
	</delete>
	<select id="timelinereview" resultType="Integer">
		SELECT review_idx FROM revlike WHERE id=#{param1}
	</select>
	<select id="timelinelikereview" resultType="review">
		SELECT * FROM review WHERE review_idx=#{param1} ORDER BY review_date DESC
	</select>
	<select id="my_reply" resultType="Integer">
		SELECT review_idx FROM revreply WHERE id=#{param1}
	</select>
	<select id="timelinprofile" resultType="String">
		SELECT profile FROM member WHERE id=#{param1}
	</select>

	<select id="storeSearch_And" resultType="store" parameterType="hashmap">
		SELECT * FROM store WHERE store_addr LIKE '%'||#{map}||'%' AND store_name LIKE '%'||#{content}||'%'
		<if test="sort.equals('리뷰 최신 순')">
			ORDER BY store_revdate DESC
		</if>
	</select>
	<select id="storeSearch_Or" resultType="store" parameterType="hashmap">
		SELECT * FROM store WHERE store_addr LIKE '%'||#{map}||'%' AND
		<foreach collection="content" item="content" index="index" open="(" close=")" separator="OR">
			store_name LIKE '%'||#{content}||'%'
		</foreach>
		<if test="sort.equals('리뷰 최신 순')">
			ORDER BY store_revdate DESC
		</if>
	</select>
	<select id="storeSearch_Hash" resultType="hash">
		SELECT * FROM hash WHERE store_idx=#{param1}
	</select>
	<select id="timelinereviewreply" resultType="revReply">
		SELECT * FROM revreply WHERE review_idx=#{param1}
	</select>
</mapper>



















